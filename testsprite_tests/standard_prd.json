{
  "meta": {
    "project": "JusValida",
    "date": "2025-09-29",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "JusValida is a SaaS platform using advanced AI to analyze, validate, and suggest improvements on Brazilian legal documents, targeting lawyers and legal departments to reduce document review time and increase accuracy.",
  "core_goals": [
    "Reduce legal document analysis time by up to 80%.",
    "Increase accuracy in identifying legal risks and issues.",
    "Democratize access to quality legal document analysis in Brazil."
  ],
  "key_features": [
    "AI-powered document analysis supporting multiple providers (OpenAI GPT-5, Anthropic Claude Sonnet 4, Google Gemini 2.5 Pro) and various legal document templates.",
    "Robust user authentication system with Supabase supporting login, registration, roles and password reset functionality.",
    "Credit-based billing system integrating Stripe with flexible plans, dynamic cost calculation, and transaction history.",
    "Batch processing capability for handling multiple document analyses with progress tracking and reporting.",
    "Administrative dashboard for user management, AI provider configuration, usage stats, and notifications.",
    "Support system including ticketing, real-time chat, and a knowledge base to assist users and admins.",
    "File upload system supporting PDF, DOC, DOCX formats with validation and batch upload.",
    "Email notification service for user communications and transactional messages.",
    "Secure data encryption utilities and integration with PostgreSQL and Supabase for persistent storage."
  ],
  "user_flow_summary": [
    "User registers or logs in to the platform, starting with a free credit allowance for initial analyses.",
    "User uploads or pastes a legal document for analysis, selecting the AI provider and analysis type (general, contract, judicial, compliance).",
    "The system processes the document leveraging AI services and shows real-time analysis results with detailed feedback.",
    "User reviews analysis outcome, downloads reports, shares results or initiates new document analysis.",
    "Admins access the dashboard to manage users, configure AI providers, monitor platform usage and support tickets.",
    "Users can manage credits, view billing history, upgrade plans and submit support tickets as needed."
  ],
  "validation_criteria": [
    "Ensure secure and smooth Supabase-based authentication including registration, login, and password reset flows.",
    "Verify AI analysis results correspond accurately to selected providers and document types.",
    "Validate credit system correctly tracks consumption, supports payments through Stripe, and reflects billing history accurately.",
    "Confirm batch document uploads process correctly with progress visibility and detailed reporting.",
    "Admin dashboard accurately reflects user data, AI configurations, and platform usage metrics.",
    "Support ticketing and chat systems function reliably with timely response capabilities.",
    "File upload supports required formats with proper file integrity checks.",
    "Email notifications sent correctly for user actions and system alerts.",
    "System maintains data security and encryption standards across storage and transmission."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React",
      "Vite",
      "Express.js",
      "Supabase",
      "PostgreSQL",
      "Tailwind CSS",
      "Radix UI",
      "TanStack Query",
      "Drizzle ORM",
      "Netlify Functions"
    ],
    "features": [
      {
        "name": "User Authentication",
        "description": "Supabase-based authentication system with login, register, and password reset functionality",
        "files": [
          "client/src/hooks/use-supabase-auth.tsx",
          "client/src/hooks/use-user.tsx",
          "client/src/lib/supabase.ts",
          "server/middleware/supabase-auth.ts"
        ]
      },
      {
        "name": "Document Analysis",
        "description": "AI-powered document analysis system with multiple providers and templates",
        "files": [
          "client/src/pages/dashboard.tsx",
          "client/src/pages/analyses.tsx",
          "server/services/ai.ts",
          "server/routes.ts"
        ]
      },
      {
        "name": "Credit System",
        "description": "Credit-based billing system with transactions and analytics",
        "files": [
          "client/src/pages/billing.tsx",
          "server/services/costCalculator.ts",
          "server/routes.ts"
        ]
      },
      {
        "name": "Admin Dashboard",
        "description": "Administrative interface for user management and platform analytics",
        "files": [
          "client/src/pages/admin.tsx",
          "server/routes.ts"
        ]
      },
      {
        "name": "API Layer",
        "description": "RESTful API with Express.js backend and Netlify Functions",
        "files": [
          "server/index.ts",
          "server/routes.ts",
          "netlify/functions/api.js",
          "client/src/lib/queryClient.ts"
        ]
      },
      {
        "name": "Database Layer",
        "description": "PostgreSQL database with Drizzle ORM and Supabase integration",
        "files": [
          "server/db.ts",
          "server/storage.ts",
          "shared/schema.ts",
          "drizzle.config.ts"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI components built with Radix UI and Tailwind CSS",
        "files": [
          "client/src/components/ui/",
          "client/src/components/layout/",
          "client/src/pages/"
        ]
      },
      {
        "name": "File Upload",
        "description": "File upload system for document analysis with batch processing",
        "files": [
          "client/src/pages/dashboard.tsx",
          "server/services/batchProcessor.ts",
          "server/routes.ts"
        ]
      },
      {
        "name": "Email Service",
        "description": "Email notification system for user communications",
        "files": [
          "server/services/email.ts",
          "server/routes.ts"
        ]
      },
      {
        "name": "Encryption Service",
        "description": "Data encryption and security utilities",
        "files": [
          "server/lib/encryption.ts",
          "server/storage.ts"
        ]
      }
    ]
  }
}
